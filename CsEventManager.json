{
	"swagger": "2.0",
	"info": {
		"description": "Api Documentation",
		"version": "1.0",
		"title": "Api Documentation",
		"termsOfService": "urn:tos",
		"contact": {
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"host": "excell.vkw.tu-dresden.de:20081",
	"basePath": "/",
	"tags": [
		{
			"name": "cs-event-manager",
			"description": "Crowdsourcing Event Manager"
		},
		{
			"name": "loggers-mvc-endpoint",
			"description": "Loggers Mvc Endpoint"
		},
		{
			"name": "heapdump-mvc-endpoint",
			"description": "Heapdump Mvc Endpoint"
		},
		{
			"name": "audit-events-mvc-endpoint",
			"description": "Audit Events Mvc Endpoint"
		},
		{
			"name": "health-mvc-endpoint",
			"description": "Health Mvc Endpoint"
		},
		{
			"name": "basic-error-controller",
			"description": "Basic Error Controller"
		}]
	,
	"paths": {
		"/CsEventManager/": {
			"get": {
				"tags": [
					"cs-event-manager"]
				,
				"summary": "Returns all events in the rectangle.",
				"operationId": "getAllInUsingGET",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/json",
					"*/*"]
				,
				"parameters": [
					{
						"name": "left",
						"in": "query",
						"description": "left",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "top",
						"in": "query",
						"description": "top",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "right",
						"in": "query",
						"description": "right",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "bottom",
						"in": "query",
						"description": "bottom",
						"required": true,
						"type": "number",
						"format": "double"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FeatureCollection"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"cs-event-manager"]
				,
				"summary": "Collect events",
				"operationId": "putUsingPOST",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/json",
					"*/*"]
				,
				"parameters": [
					{
						"in": "body",
						"name": "f",
						"description": "f",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Feature"
						}
					}]
				,
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"cs-event-manager"]
				,
				"summary": "Delete the events with the sid",
				"operationId": "removeUsingDELETE",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/json",
					"*/*"]
				,
				"parameters": [
					{
						"name": "sid",
						"in": "query",
						"description": "sid",
						"required": false,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/CsEventManager/crowdsourceevent": {
			"post": {
				"tags": [
					"cs-event-manager"]
				,
				"summary": "Get correctly mapped traffic event for a list of coordinates",
				"operationId": "crowdsourceeventUsingPOST",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/json",
					"*/*"]
				,
				"parameters": [
					{
						"in": "body",
						"name": "jsonObjectInput",
						"description": "JSON object of time gaps with coordinates",
						"required": false,
						"schema": {
							"type": "string"
						}
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/CsEventManager/last": {
			"get": {
				"tags": [
					"cs-event-manager"]
				,
				"summary": "Return the last collected event. (for debugging)",
				"operationId": "getLastUsingGET",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/json",
					"*/*"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Feature"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/CsEventManager/{sid}": {
			"get": {
				"tags": [
					"cs-event-manager"]
				,
				"summary": "Returns the events with the sid",
				"operationId": "getLastUsingGET_1",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/json",
					"*/*"]
				,
				"parameters": [
					{
						"name": "sid",
						"in": "path",
						"description": "sid",
						"required": true,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Feature"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/auditevents": {
			"get": {
				"tags": [
					"audit-events-mvc-endpoint"]
				,
				"summary": "findByPrincipalAndAfterAndType",
				"operationId": "findByPrincipalAndAfterAndTypeUsingGET",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"parameters": [
					{
						"name": "principal",
						"in": "query",
						"description": "principal",
						"required": false,
						"type": "string"
					},
					{
						"name": "after",
						"in": "query",
						"description": "after",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/auditevents.json": {
			"get": {
				"tags": [
					"audit-events-mvc-endpoint"]
				,
				"summary": "findByPrincipalAndAfterAndType",
				"operationId": "findByPrincipalAndAfterAndTypeUsingGET_1",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"parameters": [
					{
						"name": "principal",
						"in": "query",
						"description": "principal",
						"required": false,
						"type": "string"
					},
					{
						"name": "after",
						"in": "query",
						"description": "after",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/error": {
			"get": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingGET",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingHEAD",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPOST",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPUT",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingDELETE",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingOPTIONS",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"basic-error-controller"]
				,
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPATCH",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"text/html"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/health": {
			"get": {
				"tags": [
					"health-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/health.json": {
			"get": {
				"tags": [
					"health-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET_1",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/heapdump": {
			"get": {
				"tags": [
					"heapdump-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET_2",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/octet-stream"]
				,
				"parameters": [
					{
						"name": "live",
						"in": "query",
						"description": "live",
						"required": false,
						"type": "boolean",
						"default": true
					}]
				,
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/heapdump.json": {
			"get": {
				"tags": [
					"heapdump-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET_3",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/octet-stream"]
				,
				"parameters": [
					{
						"name": "live",
						"in": "query",
						"description": "live",
						"required": false,
						"type": "boolean",
						"default": true
					}]
				,
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/loggers": {
			"get": {
				"tags": [
					"loggers-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET_4",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/loggers.json": {
			"get": {
				"tags": [
					"loggers-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET_5",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/loggers/{name}": {
			"get": {
				"tags": [
					"loggers-mvc-endpoint"]
				,
				"summary": "get",
				"operationId": "getUsingGET",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name",
						"required": true,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"loggers-mvc-endpoint"]
				,
				"summary": "set",
				"operationId": "setUsingPOST",
				"consumes": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "configuration",
						"description": "configuration",
						"required": true,
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						}
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		}
	},
	"definitions": {
		"FeatureCollection": {
			"type": "object",
			"properties": {
				"bbox": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"crs": {
					"$ref": "#/definitions/Crs"
				},
				"features": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				}
			}
		},
		"Crs": {
			"type": "object",
			"properties": {
				"properties": {
					"type": "object"
				},
				"type": {
					"type": "string",
					"enum": [
						"name",
						"link"]
				}
			}
		},
		"ModelAndView": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				},
				"model": {
					"type": "object"
				},
				"modelMap": {
					"type": "object",
					"additionalProperties": {
						"type": "object"
					}
				},
				"reference": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
						"100",
						"101",
						"102",
						"103",
						"200",
						"201",
						"202",
						"203",
						"204",
						"205",
						"206",
						"207",
						"208",
						"226",
						"300",
						"301",
						"302",
						"303",
						"304",
						"305",
						"307",
						"308",
						"400",
						"401",
						"402",
						"403",
						"404",
						"405",
						"406",
						"407",
						"408",
						"409",
						"410",
						"411",
						"412",
						"413",
						"414",
						"415",
						"416",
						"417",
						"418",
						"419",
						"420",
						"421",
						"422",
						"423",
						"424",
						"426",
						"428",
						"429",
						"431",
						"451",
						"500",
						"501",
						"502",
						"503",
						"504",
						"505",
						"506",
						"507",
						"508",
						"509",
						"510",
						"511"]
				},
				"view": {
					"$ref": "#/definitions/View"
				},
				"viewName": {
					"type": "string"
				}
			}
		},
		"GeoJsonObject": {
			"type": "object",
			"properties": {
				"bbox": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"crs": {
					"$ref": "#/definitions/Crs"
				}
			}
		},
		"View": {
			"type": "object",
			"properties": {
				"contentType": {
					"type": "string"
				}
			}
		},
		"Feature": {
			"type": "object",
			"properties": {
				"bbox": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"crs": {
					"$ref": "#/definitions/Crs"
				},
				"geometry": {
					"$ref": "#/definitions/GeoJsonObject"
				},
				"id": {
					"type": "string"
				},
				"properties": {
					"type": "object"
				}
			}
		}
	}
}
