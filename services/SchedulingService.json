{"swagger":"2.0","info":{"description":"Diese API liefert eine Liste von möglichen Zeitfenstern für Termine oder Dienstleistungen, basierend auf Routenoptimierung. Die Hauptanwendungsfälle für den Tourenplanungsalgorithmus sind einerseits das Pflegeszenario und andererseits das Logistikszenario. Für das Pflegeszenario werden Fahrzeuge und dazugehörige Pflegedienstleistungen optimiert, wohingegen für das Logistikszenario Fahrzeuge und Kundentermine analysiert werden. Der Tourenplanungsalgorithmus nimmt für die obigen Anwendungsfälle JSON entgegen und generiert JSON als Rückgabe.\n\nThe Scheduling API is designed to optimize the route of a trip with multiple stops. It offers three endpoints which follow different purposes:\nscheduling finds the best fit for a new appointment into a given schedule of existing appointments (JSON array).\nschedulingcare plans the complete schedules for multiple cars. Therefore, it requires a detailed description (JSON) about different client constraints.\n\nDummy Input: https://projekt.beuth-hochschule.de/fileadmin/projekt/magda/Presentations/Testdaten_Scheduling.json","version":"1.0","title":"ExCELL Scheduling API","termsOfService":"Use only for testing","contact":{"name":"Beuth Hochschule für Technik Berlin - Labor für Rechner- und Informationssysteme - MAGDa Gruppe","url":"https://projekt.beuth-hochschule.de/magda/poeple","email":"spieper@beuth-hochschule"},"license":{"name":"Link to source code","url":"https://github.com/excell-mobility/scheduling_service"}},"host":"excell-mobility.de","basePath":"/integration/api/v1/service-request/schedulingservice","tags":[{"name":"loggers-mvc-endpoint","description":"Loggers Mvc Endpoint"},{"name":"planning-controller","description":"Planning Controller"},{"name":"heapdump-mvc-endpoint","description":"Heapdump Mvc Endpoint"},{"name":"audit-events-mvc-endpoint","description":"Audit Events Mvc Endpoint"}],"schemes":["https"],"paths":{"/auditevents":{"get":{"tags":["audit-events-mvc-endpoint"],"summary":"findByPrincipalAndAfterAndType","operationId":"findByPrincipalAndAfterAndTypeUsingGET","consumes":["application/json"],"produces":["application/vnd.spring-boot.actuator.v1+json","application/json"],"parameters":[{"name":"principal","in":"query","description":"principal","required":false,"type":"string"},{"name":"after","in":"query","description":"after","required":false,"type":"string","format":"date-time"},{"name":"type","in":"query","description":"type","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/auditevents.json":{"get":{"tags":["audit-events-mvc-endpoint"],"summary":"findByPrincipalAndAfterAndType","operationId":"findByPrincipalAndAfterAndTypeUsingGET_1","consumes":["application/json"],"produces":["application/vnd.spring-boot.actuator.v1+json","application/json"],"parameters":[{"name":"principal","in":"query","description":"principal","required":false,"type":"string"},{"name":"after","in":"query","description":"after","required":false,"type":"string","format":"date-time"},{"name":"type","in":"query","description":"type","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/heapdump":{"get":{"tags":["heapdump-mvc-endpoint"],"summary":"invoke","operationId":"invokeUsingGET","consumes":["application/json"],"produces":["application/octet-stream"],"parameters":[{"name":"live","in":"query","description":"live","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"OK"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/heapdump.json":{"get":{"tags":["heapdump-mvc-endpoint"],"summary":"invoke","operationId":"invokeUsingGET_1","consumes":["application/json"],"produces":["application/octet-stream"],"parameters":[{"name":"live","in":"query","description":"live","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"OK"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/loggers":{"get":{"tags":["loggers-mvc-endpoint"],"summary":"invoke","operationId":"invokeUsingGET_2","consumes":["application/json"],"produces":["application/vnd.spring-boot.actuator.v1+json","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/loggers.json":{"get":{"tags":["loggers-mvc-endpoint"],"summary":"invoke","operationId":"invokeUsingGET_3","consumes":["application/json"],"produces":["application/vnd.spring-boot.actuator.v1+json","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/loggers/{name}":{"get":{"tags":["loggers-mvc-endpoint"],"summary":"get","operationId":"getUsingGET","consumes":["application/json"],"produces":["application/vnd.spring-boot.actuator.v1+json","application/json"],"parameters":[{"name":"name","in":"path","description":"name","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]},"post":{"tags":["loggers-mvc-endpoint"],"summary":"set","operationId":"setUsingPOST","consumes":["application/vnd.spring-boot.actuator.v1+json","application/json"],"produces":["application/vnd.spring-boot.actuator.v1+json","application/json"],"parameters":[{"name":"name","in":"path","description":"name","required":true,"type":"string"},{"in":"body","name":"configuration","description":"configuration","required":true,"schema":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/v1/scheduling":{"post":{"tags":["planning-controller"],"summary":"Get possible time slots for appointments","operationId":"schedulingUsingPOST","consumes":["application/json"],"produces":["application/json","*/*"],"parameters":[{"in":"body","name":"jsonArrayInput","description":"JSON array of time gaps with coordinates","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/PlanningResponse"}}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/v1/schedulingcare":{"post":{"tags":["planning-controller"],"summary":"Generate the scheduling for elder care","operationId":"schedulingcareUsingPOST","consumes":["application/json"],"produces":["application/json","*/*"],"parameters":[{"in":"body","name":"jsonObjectInput","description":"JSON object with patients and carers informationen","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/CareScenarioResponse"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}},"/v1/schedulingpickup":{"post":{"tags":["planning-controller"],"summary":"Generate the scheduling for pickup","operationId":"schedulingpickupUsingPOST","consumes":["application/json"],"produces":["application/json","*/*"],"parameters":[{"in":"body","name":"jsonObjectInput","description":"JSON object with pickup and dropoff locations","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PickupScenarioResponse"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}]}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"Authorization","in":"header"}},"definitions":{"CareScenarioResponse":{"type":"object","properties":{"response":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/Service"}}}}},"GeoPoint":{"type":"object","required":["latitude","longitude"],"properties":{"latitude":{"type":"number","format":"double","description":"Latitude coordinate in WGS84"},"longitude":{"type":"number","format":"double","description":"Longitude coordinate in WGS84"}}},"PickupScenarioResponse":{"type":"object","properties":{"response":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/TransportProperties"}}}}},"PlanningResponse":{"type":"object","properties":{"calendarId":{"type":"string"},"endDate":{"type":"string","format":"date-time"},"startDate":{"type":"string","format":"date-time"},"travelDistance":{"type":"number","format":"double"},"travelTime":{"type":"integer","format":"int32"}}},"Service":{"type":"object","properties":{"location":{"$ref":"#/definitions/GeoPoint"},"requiredSkills":{"type":"array","items":{"type":"string"}},"serviceID":{"type":"string"},"serviceTime":{"type":"integer","format":"int32"},"timeWindow":{"$ref":"#/definitions/TimeWindow"}}},"TimeWindow":{"type":"object","required":["end","start"],"properties":{"end":{"type":"integer","format":"int32","description":"End time in millis where midnight = 0"},"start":{"type":"integer","format":"int32","description":"Start time in millis where midnight = 0"}}},"TransportProperties":{"type":"object","properties":{"endJob":{"type":"integer","format":"int64"},"serviceTime":{"type":"integer","format":"int64"},"startJob":{"type":"integer","format":"int64"},"transportID":{"type":"string"}}}}}
