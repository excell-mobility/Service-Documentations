{
	"swagger": "2.0",
	"info": {
		"description": "Mit diesem Service können Nutzer Verkehrsereignisse (z.B. Stau, Unfall etc.) posten und einsehen. \nThis service offers an API where traffic events and traffic incidents (like traffic jam, accidents, ...) can be reported by road users",
		"version": "1.0",
		"title": "ExCELL Crowdsourcing Event Manager",
		"contact": {
			"name": "TU Dresden - Chair of Traffic Control and Process Automatisation",
			"url": "http://tu-dresden.de/vlp",
			"email": "henning.jeske@tu-dresden.de"
		}
	},
	"host": "dlr-integration.minglabs.com",
	"basePath": "/api/v1/service-request/cseventmanager",
	"tags": [
		{
			"name": "cs-event-manager",
			"description": "Cs Event Manager"
		},
		{
			"name": "operation-handler",
			"description": "Operation Handler"
		},
		{
			"name": "web-mvc-endpoint-handler-mapping",
			"description": "Web Mvc Endpoint Handler Mapping"
		}
	],
	"paths": {
		"/CsEventManager": {
			"get": {
				"tags": [
					"web-mvc-endpoint-handler-mapping"
				],
				"summary": "links",
				"operationId": "linksUsingGET",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "object",
								"additionalProperties": {
									"$ref": "#/definitions/Link"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			}
		},
		"/CsEventManager/all": {
			"get": {
				"tags": [
					"cs-event-manager"
				],
				"summary": "Returns all events in the rectangle.",
				"operationId": "getAllInUsingGET",
				"produces": [
					"*/*",
					"application/json"
				],
				"parameters": [
					{
						"name": "left",
						"in": "query",
						"description": "left",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "top",
						"in": "query",
						"description": "top",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "right",
						"in": "query",
						"description": "right",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "bottom",
						"in": "query",
						"description": "bottom",
						"required": true,
						"type": "number",
						"format": "double"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FeatureCollection"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			}
		},
		"/CsEventManager/crowdsourceevent": {
			"post": {
				"tags": [
					"cs-event-manager"
				],
				"summary": "Get correctly mapped traffic event for a list of coordinates",
				"operationId": "crowdsourceeventUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*",
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "jsonObjectInput",
						"description": "JSON object of time gaps with coordinates",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			}
		},
		"/CsEventManager/event": {
			"get": {
				"tags": [
					"cs-event-manager"
				],
				"summary": "Returns the events with the sid",
				"operationId": "getEventUsingGET",
				"produces": [
					"*/*",
					"application/json"
				],
				"parameters": [
					{
						"name": "sid",
						"in": "query",
						"description": "sid",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Feature"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			},
			"post": {
				"tags": [
					"cs-event-manager"
				],
				"summary": "Collect events",
				"operationId": "putUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*",
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "f",
						"description": "f",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Feature"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			},
			"delete": {
				"tags": [
					"cs-event-manager"
				],
				"summary": "Delete the events with the sid",
				"operationId": "removeUsingDELETE",
				"produces": [
					"*/*",
					"application/json"
				],
				"parameters": [
					{
						"name": "sid",
						"in": "query",
						"description": "sid",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			}
		},
		"/CsEventManager/health": {
			"get": {
				"tags": [
					"operation-handler"
				],
				"summary": "handle",
				"operationId": "handleUsingGET",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": false,
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			}
		},
		"/CsEventManager/lastevent": {
			"get": {
				"tags": [
					"cs-event-manager"
				],
				"summary": "Return the last collected event. (for debugging)",
				"operationId": "getLastUsingGET",
				"produces": [
					"*/*",
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Feature"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": []
					}
				]
			}
		}
	},
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header"
		}
	},
	"definitions": {
		"Crs": {
			"type": "object",
			"properties": {
				"properties": {
					"type": "object"
				},
				"type": {
					"type": "string",
					"enum": [
						"name",
						"link"
					]
				}
			},
			"title": "Crs"
		},
		"Feature": {
			"type": "object",
			"properties": {
				"bbox": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"crs": {
					"$ref": "#/definitions/Crs"
				},
				"geometry": {
					"$ref": "#/definitions/GeoJsonObject"
				},
				"id": {
					"type": "string"
				},
				"properties": {
					"type": "object"
				}
			},
			"title": "Feature"
		},
		"FeatureCollection": {
			"type": "object",
			"properties": {
				"bbox": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"crs": {
					"$ref": "#/definitions/Crs"
				},
				"features": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				}
			},
			"title": "FeatureCollection"
		},
		"GeoJsonObject": {
			"type": "object",
			"properties": {
				"bbox": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"crs": {
					"$ref": "#/definitions/Crs"
				}
			},
			"title": "GeoJsonObject"
		},
		"Link": {
			"type": "object",
			"properties": {
				"href": {
					"type": "string"
				},
				"templated": {
					"type": "boolean"
				}
			},
			"title": "Link"
		},
		"Map«string,Link»": {
			"type": "object",
			"title": "Map«string,Link»",
			"additionalProperties": {
				"$ref": "#/definitions/Link"
			}
		}
	}
}
