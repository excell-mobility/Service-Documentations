{
	"swagger": "2.0",
	"info": {
		"description": "This service offers an API to upload sensor data from statonary traffic data sensors for different data types",
		"version": "1.0",
		"title": "ExCELL Sensor Data Collector",
		"contact": {
			"name": "TU Dresden - Chair of Traffic Control and Process Automatisation",
			"url": "http://tu-dresden.de/vlp",
			"email": "henning.jeske@tu-dresden.de"
		}
	},
	"host": "dlr-integration.minglabs.com",
	"basePath": "/api/v1/service-request/sensordatacollector",
	"tags": [
		{
			"name": "health-mvc-endpoint",
			"description": "Health Mvc Endpoint"
		},
		{
			"name": "sensor-data-collector",
			"description": "Sensor Data Collector"
		}]
	,
	"paths": {
		"/SensorDataCollector/createSensor": {
			"post": {
				"tags": [
					"sensor-data-collector"]
				,
				"summary": "Create a Sensor",
				"operationId": "createSensorUsingPOST",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"*/*",
					"application/json"]
				,
				"parameters": [
					{
						"name": "sid",
						"in": "query",
						"description": "sid",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": true,
						"type": "string"
					},
					{
						"name": "properties",
						"in": "query",
						"description": "properties",
						"required": true,
						"type": "string"
					},
					{
						"name": "lon",
						"in": "query",
						"description": "lon",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "lat",
						"in": "query",
						"description": "lat",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "edgeId",
						"in": "query",
						"description": "edgeId",
						"required": true,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": [
						]
					}]
			}
		},
		"/SensorDataCollector/createSensorGk": {
			"post": {
				"tags": [
					"sensor-data-collector"]
				,
				"summary": "Create a Sensor with WGS84 coordinates",
				"operationId": "createSensor_gkUsingPOST",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"*/*",
					"application/json"]
				,
				"parameters": [
					{
						"name": "sid",
						"in": "query",
						"description": "sid",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": true,
						"type": "string"
					},
					{
						"name": "properties",
						"in": "query",
						"description": "properties",
						"required": true,
						"type": "string"
					},
					{
						"name": "lon",
						"in": "query",
						"description": "lon",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "lat",
						"in": "query",
						"description": "lat",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "edgeId",
						"in": "query",
						"description": "edgeId",
						"required": true,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": [
						]
					}]
			}
		},
		"/SensorDataCollector/getId": {
			"get": {
				"tags": [
					"sensor-data-collector"]
				,
				"summary": "Get the Sensor-ID",
				"operationId": "getIdUsingGET",
				"produces": [
					"*/*",
					"application/json"]
				,
				"parameters": [
					{
						"name": "sid",
						"in": "query",
						"description": "sid",
						"required": true,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": [
						]
					}]
			}
		},
		"/SensorDataCollector/health": {
			"get": {
				"tags": [
					"health-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET",
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": [
						]
					}]
			}
		},
		"/SensorDataCollector/health.json": {
			"get": {
				"tags": [
					"health-mvc-endpoint"]
				,
				"summary": "invoke",
				"operationId": "invokeUsingGET_1",
				"produces": [
					"application/vnd.spring-boot.actuator.v1+json",
					"application/json"]
				,
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": [
						]
					}]
			}
		},
		"/SensorDataCollector/newData": {
			"post": {
				"tags": [
					"sensor-data-collector"]
				,
				"summary": "Add dataset to a sensor",
				"operationId": "newDataUsingPOST",
				"consumes": [
					"application/json"]
				,
				"produces": [
					"*/*",
					"application/json"]
				,
				"parameters": [
					{
						"name": "sensorId",
						"in": "query",
						"description": "sensorId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "time",
						"in": "query",
						"description": "time",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "values",
						"in": "query",
						"description": "values",
						"required": true,
						"type": "string"
					}]
				,
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"api_key": [
						]
					}]
			}
		}
	},
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header"
		}
	}
}
